name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    # outputs:
    #   output1: ${{ steps.time1.outputs.time }}
    #   output2: ${{ steps.time2.outputs.time }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: root/**
          separator: ","
      - name: A/B Check
        if: steps.changed-files.outputs.any_changed != 'true'
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('No function file changed.')
      - run: echo "branch_name=${{ github.ref }}" >> $GITHUB_ENV
      - if: startsWith( env.branch_name, 'dev' ) == 'true'
        run: echo "env=dev" >> $GITHUB_ENV
      - if: startsWith( env.branch_name, 'stg' ) == 'true'
        run: echo "env=stg" >> $GITHUB_ENV
      - if: startsWith( env.branch_name, 'prd' ) == 'true'
        run: echo "env=prd" >> $GITHUB_ENV
      - name: show changed files
        id: show-changed-files
        run: |
           files_str = "${{ steps.changed-files.outputs.all_changed_files }}"
           files_array = files_str.split(",")
           for i in files_array:
              print(i)
        shell: python

      # - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: List all changed files
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
      #       echo "$file was changed"
      #     done
      # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}
      # - name: Wait 5 second
      #   run: sleep 5s
      # - name: Check time
      #   id: time1
      #   run: echo "time=$(date)" >> $GITHUB_OUTPUT
      # - name: Wait 5 second
      #   run: sleep 5s
      # - name: Check time
      #   id: time2
      #   run: echo "time=$(date)" >> $GITHUB_OUTPUT
      # - run: echo "üçè This job's status is ${{ job.status }}."
      # - name: Dump steps context
      #   run: echo '${{ toJSON(steps) }}'
      # - id: foo
      #   uses: udtren/github-actions-composite-action@v1
      #   with:
      #     commit-message: 'Hello from prd'
      # - run: echo random-number ${{ steps.foo.outputs.test-output }}
      #   shell: bash
